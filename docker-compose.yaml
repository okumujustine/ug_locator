version: '3.9'

name: ug_locator_dev

services:
  database:
    image: postgis/postgis:15-3.3-alpine
    container_name: ug_locator_database
    platform: linux/amd64
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-ug_locator}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB:-ug_locator}", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ug_locator_backend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@database:5432/${POSTGRES_DB:-ug_locator}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key}
      - PORT=3000
    ports:
      - "3000:3000"
    volumes:
      - ./apps/backend:/app/apps/backend
      - /app/apps/backend/node_modules
      - /app/node_modules
    networks:
      - app_network
    depends_on:
      database:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ug_locator_frontend
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - VITE_API_URL=http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./apps/frontend:/app/apps/frontend
      - /app/apps/frontend/node_modules
      - /app/node_modules
    networks:
      - app_network
    depends_on:
      - backend

volumes:
  db_data_dev:

networks:
  app_network:
    driver: bridge